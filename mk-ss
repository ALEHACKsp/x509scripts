#!/bin/bash
#
# mk-ss bash script
# =================
#
# This is a small script to create a plain self-signed certificate
# that expires in January 2038.  If given no arguments it creates a V1
# x509 certificate with the common name 'localhost'. The first argument
# is the Common Name, additional arguments are set as SAN hosts which
# automatically converts the certificate to a plain V3 x509 certificate.
# An empty second argument gives a SAN list of just the common name.
#
# The certificate and key are 2048 bit RSA and sent out the standard output.

make_ss() {
    local CN="$1" SERIAL ; shift
    [ "$CN" = "" ] && CN=localhost

    make_ss_reqconf() {
	local SANLIST=''
	[ "$#" -gt 0 ] && {
	    SANLIST="$(echo "$CN $*" | xargs)"
	    SANLIST="DNS:${SANLIST// /,DNS:}"
	}
	echo '[req]'
	echo 'distinguished_name = rdn'
	echo 'prompt = no'
	[ "$SANLIST" != "" ] && echo 'x509_extensions = x509v3'
	echo '[rdn]'
	echo "dnQualifier=$SERIAL"
	echo "CN=$CN"
	[ "$SANLIST" != "" ] && {
	    echo '[x509v3]'
	    echo "subjectAltName=$SANLIST"
	}
    }

    SERIAL="$(openssl rand -hex 8)"
    SSKEY="$(openssl genrsa)"
    SSCERT="$(openssl req -new -x509 \
	    -days $((24842 - $(date +%s)/86400)) \
	    -set_serial 0x"$SERIAL" \
	    -key <(echo "$SSKEY") \
	    -config <(make_ss_reqconf "$@") )"
    unset make_ss_reqconf
}

make_ss "$@"

echo "$SSCERT" | openssl x509 -subject -serial -dates
echo "$SSKEY"
