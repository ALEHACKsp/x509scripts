#!/bin/bash -
if [ ! -n "$BASH_VERSION" ];then exec bash "$0" "$@";else set +o posix;fi
set -e
export OPENSSL_CONF=/dev/null
CERT_DIR="${CERT_DIR:-.}"

# This is my default for making a key file.
mkkey() { openssl ecparam -name prime256v1 -genkey -noout ;}
# See also:
# mkkey() { openssl genpkey -paramfile <(openssl genpkey -genparam -algorithm ec -pkeyopt ec_paramgen_curve:prime256v1) ;}

FN=
SERIAL=
V3HEAD=
SANLIST=
V3OPTS=
V3EXTRAS=

V3INIT='x509_extensions = req_x509
[ req_x509 ]
'

for ar
do  case "$ar" in

    -days[=:]* ) CERT_DAYS="${ar#*[=:]}" ;;
    -out[=:]* ) FN="${ar#*[=:]}" ;;

    -ser[=:]??*|-serial[=:]??* ) SERIAL="${ar#*[=:]}" ;;

    -rsa[=:]* ) eval "mkkey() { openssl genrsa '${ar#*[=:]}' ; }" ;;
    -dsa[=:]* ) eval "mkkey() { openssl dsaparam -genkey '${ar#*[=:]}' ; }" ;;
    -ec[=:]* ) 
	    ar="${ar#*[=:]}:" ; curve="${ar%%:*}"
	    ar="${ar#*:}:" ; param="${ar%%:*}"
	    ar="${ar#*:}:" ; noseed="${ar%%:*}"
	    eval "mkkey() { openssl ecparam -name '$curve' ${param:+-param_enc $param} ${noseed:+-no_seed} -genkey -noout ; }"
	    ;;

    -md4|-md5|-ripemd160|-sha|-sha1|-sha224|-sha256|-sha384|-sha512|-whirlpool)
	DGST=$ar ;;

    -v3[=:]* )
	    V3HEAD="$V3INIT"
	    V3OPTS="$V3OPTS
	    ${ar#*[=:]}
	    "
	    ;;

    -v3xt[=:]* )
	    V3HEAD="$V3INIT"
	    V3EXTRAS="$V3EXTRAS
	    ${ar#*[=:]}
	    "
	    ;;

    -ca|-v3ca )
	    V3HEAD="$V3INIT"
	    V3OPTS="$V3OPTS
	    subjectKeyIdentifier=hash
	    authorityKeyIdentifier=keyid:always,issuer
	    basicConstraints = CA:TRUE
	    "
	    ;;

    -v3|-v3usr )
	    V3HEAD="$V3INIT"
	    V3OPTS="$V3OPTS
	    basicConstraints = CA:FALSE
	    subjectKeyIdentifier=hash
	    authorityKeyIdentifier=keyid,issuer
	    "
	    ;;

    -san[=:]* )
	    V3HEAD="$V3INIT"
	    san="${ar#*[=:]}"
	    [ "$SANLIST" != "" ] && SANLIST="$SANLIST,"
	    case "$san" in
	    [0-9]*.*[0-9] ) SANLIST="${SANLIST}IP:$san" ;;
	    *@* ) SANLIST="${SANLIST}email:$san" ;;
	    * ) SANLIST="${SANLIST}DNS:$san" ;;
	    esac
	    ;;

    /*=* )
	if [ "$SUBJ" != "" ] ; then
	    echo >&1 Duplicate subject name definition ; exit 1
	fi
	SUBJ="$ar"
	;;

    -*|*/*) echo >&2 "Unknown option: $ar" ; exit 1 ;;

    * ) if [ "$SUBJ" != "" ] ; then
	    SUBJ="${SUBJ%/}/OU=$ar/"
	else
	    SUBJ="/CN=$ar/" ; CN="$ar"
	fi
	;;
    esac
done

[ "$SANLIST" != "" ] && {
    if [ "$CN" = "" ]
    then SANLIST="subjectAltName=$SANLIST"
    else SANLIST="subjectAltName=DNS:$CN,$SANLIST"
    fi
}

[ -s "$FN" ] &&
    { echo ERROR: File $FN already exists ; exit 1 ; }

mkreqconf() {
    echo '[req]'
    echo 'distinguished_name = req_distinguished_name'
    echo "$V3HEAD"
    echo "$SANLIST"
    echo "$V3OPTS"
    echo '[ req_distinguished_name ]'
    echo 'organizationalUnitName = Organizational Unit Name'
    echo 'commonName = Common Name'
    echo "$V3EXTRAS"
}

CAKEY="$(mkkey)"
CACERT="$(openssl req -new -x509 $DGST \
	-days "${CERT_DAYS:-3652}" \
	${SERIAL:+-set_serial 0x"$SERIAL"} \
	${SUBJ:+-subj "$SUBJ"} \
	-key <(echo "$CAKEY") \
	-config <(mkreqconf) )"

outp() {
    echo "$CACERT" | openssl x509 -subject -serial -dates
    if ! openssl no-pkey >/dev/null
    then echo "$CAKEY" | openssl pkey
    else echo "$CAKEY"
    fi
}

if [ "$FN" != '' ] ; then umask 077 ; outp > "$FN" ; else outp ; fi
