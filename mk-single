#!/bin/bash -
if [ ! -n "$BASH_VERSION" ];then exec bash "$0" "$@";else set +o posix;fi
set -e
export OPENSSL_CONF=/dev/null

if [ "$#" -lt 1 ]
then
    echo >&2 Usage: "$0: commonName [SAN names]"
    exit 1
fi

CN="$1"

F="$CN"
case "$F" in \*.* ) F=${F#??} ;; esac
F="${F:-cert}"
F=$(echo "$F" | tr -c '[a-zA-Z0-9\.\-\012]' _)

SANLIST="${*// /,}"

CERTSERIAL=$(openssl rand -hex 8)
export CERTSERIAL

[ -s certs/ca.crt ] && { echo ERROR: CA already exists ; exit 1 ; }
[ -s certs/"$F".crt ] && { echo "ERROR: Certificate for '$CN' already exists" ; exit 1 ; }

mkdir -p certs

build_xt() {

    cat <<-!
	[ x509_pol ]
	policyIdentifier =  2.5.29.32.0
	userNotice=@notice
	[ notice ]
!

    {
	echo
	echo 'Only one certificate was signed by this CA.'
	echo 'The serial number of that certificate is:'
	echo "$CERTSERIAL"
	echo
	echo 'The common name and alternative names on the certificate are:'
	for h in ${SANLIST//,/ }
	do echo '    '$h
	done

    } | sed -e '1s/^/explicitText=/' -e 's:$:\\r\\n\\:'

    echo
}

bash mk-self-sign \
    "/CN=Private CA for $CN/" \
    -out=ca \
    -days=3652 \
    -v3='basicConstraints=critical,CA:TRUE, pathlen:0' \
    -v3='keyUsage=keyCertSign' \
    -v3='extendedKeyUsage=serverAuth' \
    -v3='certificatePolicies=@x509_pol' \
    -v3xt="$(build_xt)"

export CRLURL="http://$CN/CertEnroll/${F//_./}.ca.crl"

bash cmd.02.make-crt ${SANLIST//,/ }

[ -s "$F.crt" ] && {
    rm certs/ca.pem certs/ca.key
    mv certs/ca.crt certs/"$F.ca.crt"
    mv certs/ca.crl certs/"$F.ca.crl"
    rm -rf demoCA
}
