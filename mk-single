#!/bin/bash -
if [ ! -n "$BASH_VERSION" ];then exec bash "$0" "$@";else set +o posix;fi
set -e

if [ "$#" -lt 1 ]
then
    echo >&2 Usage: "$0: commonName [SAN names]"
    exit 1
fi

CN="$1" ; shift
SANLIST="$*"
F="${CN:-_}"
case "$F" in \*.?* ) F=${F#??} ;; esac
F=$(echo "$F" | tr -c 'a-zA-Z0-9\.\-\012' _)

NOPKEY="$(openssl no-pkey >/dev/null 2>&1 && echo yes || echo no)"

CERTSERIAL=$(openssl rand 8 | od -x | sed -n '1{s/^[^ ]*//;s/ //gp;}')
CERT_DAYS=$((24840 - $(date +%s)/86400))

build_xt() {
    # This text is US-ASCII only
    echo 'Only one certificate was signed by this CA.'
    echo 'The serial number of that certificate is:'
    echo "    $CERTSERIAL"
    echo
    if [ "$CN" = "$SANLIST" -o "$SANLIST" = '' ]
    then
	echo 'The common name on the certificate is:'
	echo "    $CN"
    else
	echo 'The common name and alternative names on the certificate are:'
	for h in "$CN" ${SANLIST}
	do echo "    $h"
	done
    fi
}

CAPEM="$(bash mk-self-sign \
    -subj-cn="Private CA for $CN" \
    -days=$CERT_DAYS \
    -v3='basicConstraints=CA:TRUE,pathlen:0' \
    ${CERTSERIAL:+-dnq="$CERTSERIAL" -poltext=<(build_xt)} \
    )"

PEMFILE="$(bash mk-self-sign \
    -rsa \
    -sign=<(echo "$CAPEM") \
    ${CERTSERIAL:+-serial="$CERTSERIAL"} \
    -subj-cn="$CN" \
    ${SANLIST:+-san="${SANLIST// /,}"} \
    )"

################################################################################

TMP=x_tmp

mkcacrlconf() {
    echo '[ca]'
    echo 'default_ca = CA_default'
    echo '[CA_default]'
    echo "database = $TMP.index.txt"

    if [ "$NOPKEY" = no ]
    then echo 'default_md = default'
    else echo 'default_md = sha256'
    fi
}

touch $TMP.index.txt
touch $TMP.index.txt.attr

CRLFILE="$(
    openssl ca \
	-config <(mkcacrlconf) \
	-gencrl \
	-crldays $CERT_DAYS \
	-keyfile <(echo "$CAPEM") \
	-cert <(echo "$CAPEM") )"

rm "$TMP".*

################################################################################

mkdir -p navcert
echo "$CAPEM" | openssl x509 -subject -serial -dates > navcert/"$F".ca.crt
echo "$CRLFILE" > navcert/"$F".crl
echo "$PEMFILE" | openssl pkey > navcert/"$F".key
echo "$PEMFILE" | openssl x509 -subject -serial -dates > navcert/"$F".crt

openssl pkcs12 -export \
    -passout pass: \
    -in navcert/"$F".crt \
    -inkey navcert/"$F".key \
    -out navcert/"$F".pfx
