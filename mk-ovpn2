#!/bin/bash -
if [ ! -n "$BASH_VERSION" ];then exec bash "$0" "$@";else set +o posix;fi

umask 077
export OPENSSL_CONF=/dev/null
CERT_DIR="${CERT_DIR:-certs}"

[ -d "$CERT_DIR" ] || { echo >&2 ERROR: Certificate directory missing ; exit 1;}

build_files() {

mkdir -p tmp ovpn-conf

SERVERCOUNT=0
SERVERNAME=
SERVEROU=

# Add all the server CA certificates.
for CA in "$CERT_DIR"/*.ca.cer
do
    [ -s "$CA" ] && {
	openssl x509 -subject -serial -dates -in "$CA"

	SERVERCOUNT=$((SERVERCOUNT+1))
	SERVERNAME="$(openssl x509 -noout -in "${CA/.ca.cer/.crt}" \
	    -subject -nameopt multiline | sed -n 's/ *commonName *= //p')"

	OU="$(openssl x509 -noout -in "${CA/.ca.cer/.crt}" -subject \
	    -nameopt multiline | sed -n 's/ *organizationalUnitName *= //p')"

	# If they have a common OU
	if [ "$SERVERCOUNT" = 1 ]
	then SERVEROU="$OU"
	else [ "$OU" != "$SERVEROU" ] && SERVEROU=""
	fi
    }
done > tmp/servers.ca-list.pem

try_file "$CERT_DIR" servers.ca-list.pem

[ -s "$CERT_DIR"/servers.ca-list.pem ] || {
    echo >&2 ERROR: No servers have been defined.
    exit 1
}

# Protect the TLS handshake from s-kiddies.
[ -f "$CERT_DIR"/tls-crypt.pvk ] ||
    openvpn --genkey --secret "$CERT_DIR"/tls-crypt.pvk

# For all the client CA certificates
for cert in "$CERT_DIR"/*.ca.crt
do
    CN="$(basename "$cert" .ca.crt)"
    CA="$CERT_DIR/$CN.ca.crt"
    [ -s "$CERT_DIR"/"$CN".key -a -s "$CA" ] && {

	echo Client $CN

	for file in pattern*.ovpn
	do
	    if [ -f "$file" ]
	    then tfile="$CN${file/pattern/}"
	    else file=/dev/null
		 tfile="$CN.ovpn"
	    fi

	    {
		cat "$file"
		echo

		# Stop the deamon whinging.
		# This has NO security effect as the CAs are unique.
		# (Even if the clients are the same OU)
		if [ "$SERVERCOUNT" -eq 1 -a "$SERVERNAME" != "" ]
		then
		    # Not on 2.4.1 Windows, ENABLE_X509ALTUSERNAME missing
		    # echo x509-username-field CN
		    echo "verify-x509-name '$SERVERNAME' name"
		elif [ "$SERVEROU" != "" ]
		then
		    echo x509-username-field OU
		    echo "verify-x509-name '$SERVEROU' name"
		fi
		echo

		[ -s "$CERT_DIR"/tls-crypt.pvk ] && {
		    if ! grep -q tls-auth "$file"
		    then
			echo '<tls-crypt>'
			cat "$CERT_DIR"/tls-crypt.pvk
			echo '</tls-crypt>'
		    fi
		}

		echo '<cert>'
		openssl x509 -subject -serial -dates -in "$CERT_DIR"/"$CN".crt
		echo '</cert>'

		echo '<key>'
		openssl pkey -in "$CERT_DIR"/"$CN".key
		echo '</key>'

		echo '<ca>'
		cat "$CERT_DIR"/servers.ca-list.pem
		echo '</ca>'

	    } > tmp/"$tfile"

	    try_file ovpn-conf "$tfile"
	done
    }
done

# Add all the client CA certificates
for cert in "$CERT_DIR"/*.ca.crt
do
    CN="$(basename "$cert" .ca.crt)"
    CA="$CERT_DIR/$CN.ca.crt"
    [ -s "$CERT_DIR"/"$CN".crt -a -s "$CA" ] && {
	openssl x509 -subject -serial -dates -in "$CA"
	echo
    }
done > tmp/clients.ca-list.pem

try_file "$CERT_DIR" clients.ca-list.pem

# Copy all the certificates and keys for the servers.
for cert in "$CERT_DIR"/*.ca.cer
do
    CN="$(basename "$cert" .ca.cer)"
    [ -s "$CERT_DIR"/"$CN".key ] && {
	echo Server $CN

	openssl x509 -subject -serial -dates -in "$CERT_DIR"/"$CN".crt > tmp/"$CN".crt
	openssl pkey -in "$CERT_DIR"/"$CN".key > tmp/"$CN".key

	cp -p "$CERT_DIR"/clients.ca-list.pem tmp/"$CN".ca-list.pem

	cp -p "$CERT_DIR"/tls-crypt.pvk tmp/"$CN".tls-crypt.pvk

	try_file ovpn-conf "$CN".crt
	try_file ovpn-conf "$CN".key
	try_file ovpn-conf "$CN".ca-list.pem
	try_file ovpn-conf "$CN".tls-crypt.pvk

	[ -f "$CERT_DIR"/dhparam.pem ] && {
	    cp -p "$CERT_DIR"/dhparam.pem tmp/"$CN".dhparam.pem
	    try_file ovpn-conf "$CN".dhparam.pem
	}
    }
done

rm -rf tmp
}

try_file() {
    [ ! -s "$1"/"$2" ] &&
	cp -p tmp/"$2" "$1"/"$2"
    if ! cmp -s tmp/"$2" "$1"/"$2"
    then cp -p tmp/"$2" "$1"/"$2"
    fi
    [ -f tmp/"$2" ] && rm tmp/"$2"
}

build_files
