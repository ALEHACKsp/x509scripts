#!/bin/bash
if [ ! -n "$BASH_VERSION" ];then exec bash "$0" "$@";else set +o posix;fi
[ $# -eq 0 ] && set -- -

NL='
'

for file
do
    DATA="$(cat "$file")"
    CERTPUB="$(echo "$DATA" | openssl x509 -pubkey -noout 2>/dev/null)"
    REQPUB="$(echo "$DATA" | openssl req -pubkey -noout 2>/dev/null)"
    PKEYPUB="$(echo "$DATA" | openssl pkey -pubout 2>/dev/null)"

    [ "$CERTPUB" != "" ] && CERTPUB="$(echo "$CERTPUB" | openssl md5 | awk '{print $2;}')"
    [ "$REQPUB" != "" ] && REQPUB="$(echo "$REQPUB" | openssl md5 | awk '{print $2;}')"
    [ "$PKEYPUB" != "" ] && PKEYPUB="$(echo "$PKEYPUB" | openssl md5 | awk '{print $2;}')"

    FIRSTCERTPUB="$CERTPUB"
    FIRSTPKEYPUB="$PKEYPUB"
    FIRSTREQPUB="$REQPUB"
    ISSU=
    CHAIN=
    PRECERTPUB=

    k=0
    while :
    do
	((k+=1))
	ITEM="$(echo "$DATA" | awk -v k=$k '/^-----BEGIN/ && k>1 {k--;next;} /^-----BEGIN/&& k {disp=1;} disp{print;} /^-----END/&&disp{disp=0;k--;}')"
	[ "$ITEM" = "" ] && break

	CERTPUB="$(echo "$ITEM" | openssl x509 -pubkey -noout 2>/dev/null)"
	REQPUB="$(echo "$ITEM" | openssl req -pubkey -noout 2>/dev/null)"
	PKEYPUB="$(echo "$ITEM" | openssl pkey -pubout 2>/dev/null)"
	PKEYPARAM="$(echo "$ITEM" | openssl pkeyparam -text -noout 2>/dev/null)"
	PUBKEY="$(echo "$ITEM" | openssl pkey -pubin 2>/dev/null)"

	[ "$CERTPUB" != "" ] && CERTPUB="$(echo "$CERTPUB" | openssl md5 | awk '{print $2;}')"
	[ "$PKEYPUB" != "" ] && PKEYPUB="$(echo "$PKEYPUB" | openssl md5 | awk '{print $2;}')"
	[ "$REQPUB" != "" ] && REQPUB="$(echo "$REQPUB" | openssl md5 | awk '{print $2;}')"

	if [ "$CERTPUB" != "" ]
	then
	    PREVCERTPUB="$CERTPUB"

	    echo "$ITEM" | openssl x509 -noout -text -certopt no_sigdump,no_pubkey
	    [ "$CERTPUB" = "$FIRSTPKEYPUB" ] &&
		echo "    The file contains a private key that matches this certificate."

	    SUBJ="$(echo "$ITEM" | openssl x509 -subject_hash -noout 2>/dev/null)"
	    [ "$SUBJ" = "$ISSU" ] &&
		echo '    This certificate is the issuer for the previous one'

	    ISSU="$(echo "$ITEM" | openssl x509 -issuer_hash -noout 2>/dev/null)"

	    if [ "$SUBJ" = "$ISSU" ]
	    then
		if ! openssl verify -CAfile <(echo "$ITEM") <(echo "$ITEM") 2>&1 | grep -iq ^error
		then
		    success=
		    tested=
		    for purpose in  sslclient sslserver nssslserver \
				    smimesign smimeencrypt \
				    crlsign ocsphelper timestampsign
		    do
			if ! openssl verify -x509_strict -purpose $purpose \
				    -CApath /dev/null \
				    -CAfile <(echo "$ITEM") \
				    ${CHAIN:+-untrusted <(echo "$CHAIN")} \
				    <(echo "$DATA") 2>&1 |
				grep -iq ^error
			then success="$success $purpose"
			fi
			tested="$tested $purpose"
		    done

		    if [ "$tested" = "$success" ]
		    then
			echo '    This self signed certificate verifies the chain for all uses'
		    elif [ "$success" != "" ]
		    then
			echo '    This self signed certificate verifies the chain for:' $success
		    elif ! openssl verify -CAfile <(echo "$ITEM") \
				    -CApath /dev/null \
				    ${CHAIN:+-untrusted <(echo "$CHAIN")} \
				    <(echo "$DATA") 2>&1 | grep -iq ^error
		    then
			echo '    This self signed certificate verifies the chain when not strict'
		    else
			echo '    This certificate is self signed'
		    fi

		else
		    echo "    This self signed certificate fails validation"
		fi
	    elif [ "$CERTPUB" != "$FIRSTCERTPUB" ]
	    then
		CHAIN="$CHAIN$NL$ITEM"
	    fi

	elif [ "$REQPUB" != "" ]
	then
	    PREVCERTPUB=
	    echo "$ITEM" | openssl req -noout -text -reqopt no_sigdump,no_pubkey
	    [ "$REQPUB" = "$FIRSTCERTPUB" ] &&
		echo "    This request matches the first certificate"
	elif [ "$PKEYPUB" != "" -a "$PKEYPUB" = "$FIRSTCERTPUB" ]
	then :
	elif [ "$PKEYPUB" != "" -a "$PKEYPUB" = "$PREVCERTPUB" ]
	then echo '    The file contains a private key that matches this certificate.'
	elif [ "$PKEYPUB" != "" ]
	then
	    echo 'A private key for this public key:'
	    echo "$ITEM" | openssl pkey -pubout | openssl pkey -pubin -noout -text
	elif [ "$PKEYPARAM" != "" ]
	then
	    echo Parameter file for genpkey:
	    echo "$PKEYPARAM"
	elif [ "$PUBKEY" != "" ]
	then
	    echo "$ITEM" | openssl pkey -pubin -noout -text
	else
	    echo Item $k not identified
	fi
    done
done
