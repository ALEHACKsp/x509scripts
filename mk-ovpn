#!/bin/bash -
if [ ! -n "$BASH_VERSION" ];then exec bash "$0" "$@";else set +o posix;fi

[ "$#" = 0 ] && { echo >&2 "Usage: $0 CommonName [Options]" ; exit 1; }
CN="$1" ; shift
V3FLG=""
SERVER=no

# Some options...
for v
do
    case "$v" in
    svr|s|server ) V3FLG="nsCertType = server" ; SERVER=yes ;;
    c|client ) V3FLG="nsCertType = client" ; SERVER=no ;;
    [1-9]*[0-9] ) CERT_DAYS="$v" ;;
    * ) echo >&2 "Option $v not recognised"; exit 1;;
    esac
done

CERT_DAYS="${CERT_DAYS:-3652}"

[ -s certs/"$CN".key ] && { echo "ERROR: Name '$CN' already exists" ; exit 1 ; }
mkdir -p certs 
set -e

# Do we have DH parameters?
[ "$SERVER" = yes ] && {
    # Very slow
    [ -s certs/dhparam.pem ] ||
	openssl dhparam -out certs/dhparam.pem 1024

    # Twice the size but faster. However, it should probably be kept secret.
    [ -s certs/dhparam.pem ] ||
	openssl dsaparam 2048 | openssl dhparam -dsaparam -out certs/dhparam.pem
}

# The CA key
openssl ecparam -name prime256v1 -genkey -out certs/"$CN".ca.key

# Self sign the CA
openssl req -new -x509 -days "$CERT_DAYS" \
    -subj "/OU=$CN/CN=Private CA/" \
    -key certs/"$CN".ca.key -config <(echo '
[req]
distinguished_name = req_distinguished_name
x509_extensions = req_x509
[ req_x509 ]
basicConstraints = critical,CA:TRUE, pathlen:0
[ req_distinguished_name ]' ) |
openssl x509 -subject > certs/"$CN".ca.crt

# Make system key, matching the CA
openssl req -new -nodes \
    -newkey param:certs/"$CN".ca.crt \
    -subj "/CN=$CN/" \
    -keyout certs/$CN.key |

# Sign it
openssl x509 -req -days "$CERT_DAYS" \
    -set_serial 0x$(openssl rand -hex 8) \
    -out certs/$CN.crt \
    -CA certs/"$CN".ca.crt \
    -CAkey certs/"$CN".ca.key \
    -extfile <(echo basicConstraints = critical,CA:FALSE ; echo "$V3FLG" )

# Remove the CA key
rm certs/"$CN".ca.key
